plugins {
    id("jt.flights.android.application")
    alias(libs.plugins.kotlinx.serialization)
}

android {

    buildFeatures {
        buildConfig = true
        compose = true
    }

    namespace = "jt.flights"

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.compiler.get()
    }

    defaultConfig {
        applicationId = "jt.flights"
        versionCode = 1
        versionName = "1.0"
        multiDexEnabled = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        checkDependencies true
        ignoreTestSources true
    }

    buildTypes {
        debug {
            multiDexKeepProguard = file("proguard.multidex.config")
        }
    }
}

dependencies {
    implementation(libs.androidx.activity)
    implementation(libs.androidx.compose.activity)
    implementation(libs.androidx.core)
    implementation(libs.androidx.lifecycle.viewmodel)
    implementation(libs.androidx.material3.android)
    implementation(libs.androidx.runtime.android)
    implementation(libs.androidx.ui.android)
    implementation(libs.circuit.backstack.android)
    implementation(libs.circuit.foundation.android)
    implementation(libs.circuit.retained.android)
    implementation(libs.circuit.runtime.android)
    implementation(libs.circuit.runtime.presenter.android)
    implementation(libs.circuit.runtime.screen.android)
    implementation(libs.circuit.runtime.ui.android)
    implementation(libs.kotlin.stdlib)
    implementation(libs.kotlinx.collections.immutable.jvm)
    implementation(projects.features.search)
    implementation(projects.foundation.networking)
    implementation(projects.services.flightaware)
    implementation(projects.services.operator)
    implementation(projects.services.search)

    debugRuntimeOnly(libs.androidx.compose.ui.manifest)


    testImplementation(libs.kotlinx.coroutines.test)

    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
}